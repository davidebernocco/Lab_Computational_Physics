"""
Variables obtained in Esercizi_settimana9

@author: david 
"""

import numpy as np
from Funz9 import c_as_derivative


# -----------------------------------------------------------------------------
# Collection of eye-made estimations and arrays of physical quantities used
# in collective plots.
# -----------------------------------------------------------------------------


# -----------------
# Study of the equilibration time

# For a 30x30 square lattice:
n_eq30 = np.asarray([15*900, 50*900, 35*900, 200*900, 400*900, 250*900, 200*900, 150*900, 180*900, 130*900, 185*900])
# For a 20x20 square lattice:
n_eq20 = np.asarray([15*400, 20*400, 75*400, 160*400, 600*400, 130*400, 100*400, 50*400, 75*400, 45*400, 35*400])
# For a 4x4 square lattice:
n_eq4 = np.asarray([1*16, 3*16, 14*16, 13*16, 13*16, 13*16, 3*16, 5*16, 5*16, 5*16, 5*16])





# --------------------------
# Study of equilibration time for chessboard starting configuration

# For a 30x30 square lattice: 
n_eq30c = np.asarray([10*900, 20*900, 30*900, 50*900, 270*900, 200*900, 200*900, 150*900, 120*900, 90*900, 150*900])
# For a 20x20 square lattice: 0
n_eq20c = np.asarray([2*400, 40*400, 40*400, 70*400, 80*400, 100*400, 110*400, 150*400, 70*400, 40*400, 65*400])
# For a 4x4 square lattice:
n_eq4c = np.asarray([4*16, 7*16, 11*16, 3*16, 3*16, 3*16, 3*16, 6*16, 7*16, 13*16, 8*16])





# --------------------------
# Plotting physical quantities: <|M|>/N, <E>/N, X/N, Cv/N

#  L = 4, T in [1,4,0.1], Neq = 10**4, Nmc = 1.6*10**5
m_4 = np.asarray([0.99935201, 0.99846602, 0.99688805, 0.99479608, 0.99155014, 0.98636422, 0.98023032, 0.96826651, 0.9562327, 0.94020496, 0.92018328, 0.89786763, 0.85961625, 0.83793859, 0.80481712, 0.76536175, 0.73081231, 0.69155694, 0.66638534, 0.62950393, 0.60055439, 0.57446481, 0.55206917, 0.52730556, 0.50692789, 0.4877682, 0.47077847, 0.45572071, 0.44429689, 0.43168909])
e_4 = np.asarray([-1.99743204, -1.99406409, -1.98808019, -1.98016832, -1.9690605, -1.95107678, -1.93064911, -1.89504968, -1.85773428, -1.81206701, -1.75872786, -1.69917281, -1.60588631, -1.5499472, -1.47034047, -1.38186589, -1.30093119, -1.21680853, -1.15672149, -1.07899874, -1.01533575, -0.96040463, -0.91037743, -0.85711829, -0.81529896, -0.7747516, -0.73904018, -0.70746068, -0.68067311, -0.65273356])
c_4 = np.asarray([0.02072616, 0.0409483, 0.07010905, 0.10003814, 0.14133432, 0.19717004, 0.25077334, 0.35350717, 0.43119873, 0.51236687, 0.59854972, 0.66738, 0.76791469, 0.78014703, 0.79639642, 0.81013516, 0.79026185, 0.75892406, 0.71073349, 0.65724342, 0.6009056, 0.55145204, 0.50447891, 0.45200891, 0.41424525, 0.3772927, 0.34225364, 0.31416926, 0.28830309, 0.26093372])
x_4 = np.asarray([0.00133726, 0.00315481, 0.00612411, 0.00964808, 0.01739228, 0.02865087, 0.04148337, 0.07714436, 0.10181075, 0.14122718, 0.19291642, 0.23878523, 0.32535724, 0.35192606, 0.39640556, 0.44994968, 0.47077294, 0.49581935, 0.48840348, 0.49051471, 0.47725718, 0.46181534, 0.44301045, 0.42067518, 0.40542647, 0.38387445, 0.3638779, 0.34610825, 0.32825628, 0.30874602])
sm_4 = np.asarray([0.00044334, 0.00047166, 0.00054135, 0.00057493, 0.00104756, 0.00129101, 0.00139726, 0.00218803, 0.00196583, 0.00223317, 0.00222585, 0.00228847, 0.00216072, 0.00214942, 0.00178767, 0.0016643, 0.00141946, 0.00118743, 0.00092443, 0.00089072, 0.00074239, 0.0007012, 0.00065941, 0.0006992, 0.00065383, 0.00072294, 0.00066478, 0.00075841, 0.00075513, 0.00079739])
se_4 = np.asarray([0.00171878, 0.00164777, 0.001745, 0.00175101, 0.00228074, 0.00231775, 0.00242148, 0.00301325, 0.00317412, 0.00331104, 0.00313122, 0.00308335, 0.00279556, 0.00268614, 0.00234034, 0.00194998, 0.00181894, 0.00150436, 0.00133532, 0.00150591, 0.00163192, 0.00183958, 0.00165659, 0.00180485, 0.00200411, 0.00199987, 0.00209856, 0.00195204, 0.00233117, 0.00212748])
sc_4 = np.asarray([0.00089573, 0.00086257, 0.00095699, 0.00096926, 0.00149783, 0.00151173, 0.00157888, 0.00186378, 0.00175053, 0.00162923, 0.00139233, 0.0012034, 0.00095007, 0.0007977, 0.00067874, 0.00046551, 0.00034818, 0.00024783, 0.00018292, 0.00015993, 0.0001481, 0.0001708, 0.00014765, 0.00018587, 0.00020707, 0.0002036, 0.0002036, 0.00019749, 0.00022646, 0.00019742])
sx_4 = np.asarray([0.00170938, 0.00012306, 0.0016712, 0.01115278, 0.02536135, 0.02848054, 0.02365783, 0.03547872, 0.03634669, 0.03579542, 0.02722939, 0.02227716, 0.01138205, 0.00785788, 0.00461223, 0.00384337, 0.00324015, 0.00266696, 0.00216906, 0.00197793, 0.00164972, 0.00151457, 0.00137577, 0.00125039, 0.00136458, 0.0010967, 0.0010982, 0.00104154, 0.0008407, 0.00086902])
cT_4, scT_4 = c_as_derivative(4, 4, e_4, 0.1, se_4)


#  L = 10, T in [1,4,0.1], Neq = 10**5, Nmc = 10**6
m_10 = np.asarray([0.99927207, 0.99851615, 0.99679432, 0.9950005, 0.99134687, 0.98664934, 0.97939806, 0.96974703, 0.95860014, 0.93121488, 0.91382062, 0.87706629, 0.81255874, 0.72666133, 0.64041996, 0.53119288, 0.42850315, 0.38137586, 0.3370423, 0.3090291, 0.27224478, 0.25326667, 0.23993401, 0.22583342, 0.21241676, 0.20374963, 0.1890411, 0.18210979, 0.18390361, 0.16918108])
e_10 = np.asarray([-1.99712829, -1.99424858, -1.98769723, -1.98114189, -1.96785921, -1.95127687,-1.92741926, -1.89741826, -1.8629777, -1.80367163, -1.74994901, -1.67277672,-1.56373963, -1.43011699, -1.31222878, -1.17705029, -1.06280572, -0.98593741,-0.93149485, -0.87876412, -0.82464554, -0.78337766, -0.74558144, -0.72034397,-0.690007, -0.66744526, -0.63569243, -0.61239876, -0.599992, -0.57044296])
c_10 = np.asarray([0.02317293, 0.03984046, 0.07183634, 0.09585881, 0.1490538, 0.1888762, 0.27441588, 0.3435426, 0.41911279, 0.6266309, 0.70253593, 0.86240399, 1.10105877, 1.30553138, 1.26198356, 1.09770492, 0.96569999, 0.76923972, 0.61861996, 0.52354042, 0.4395069, 0.37211336, 0.34088392, 0.31084974, 0.27361148, 0.25633455, 0.23007455, 0.20770936, 0.19996671, 0.18695234])
x_10 = np.asarray([1.52285461e-03, 3.04314698e-03, 6.27958802e-03, 9.71306714e-03, 1.72808271e-02, 2.47109904e-02, 4.46203900e-02, 7.17967025e-02, 1.00112222e-01, 4.92559898e-01, 3.40612510e-01, 5.50138915e-01, 1.27275373e+00, 2.00900876e+00, 2.38977034e+00, 2.54960532e+00, 2.52025294e+00, 2.05542212e+00, 1.73067876e+00, 1.45995977e+00, 1.18727629e+00, 1.00002831e+00, 8.84145199e-01, 7.84595718e-01, 6.96796458e-01, 6.36013510e-01, 5.31486029e-01, 4.74745724e-01, 4.74039973e-01, 4.05733255e-01])
sm_10 = np.asarray([0.00020342, 0.00018567, 0.00024304, 0.000293, 0.00037125, 0.0003453,0.00068641, 0.0010717, 0.00125698, 0.00467858, 0.00309856, 0.00356532,0.00591956, 0.00708904, 0.00594799, 0.00435385, 0.0039524, 0.00361734,0.00312214, 0.00283247, 0.0028541, 0.00247706, 0.00237244, 0.00229696,0.00206074, 0.00200542, 0.00186601, 0.00153316, 0.00193269, 0.00162198])
se_10 = np.asarray([0.00077408, 0.00065529, 0.00077267, 0.00079054, 0.00096344, 0.00086058,0.00135544, 0.00158445, 0.00181264, 0.00303257, 0.00270725, 0.00305974,0.00327004, 0.00401525, 0.00347391, 0.0036745, 0.00396356, 0.00398895,0.00328951, 0.00288842, 0.00254371, 0.00207228, 0.00184622, 0.00193369,0.00189984, 0.00162828, 0.00159821, 0.0014401, 0.00148877, 0.00146612])
sc_10 = np.asarray([7.19905519e-05, 9.87500126e-05, 1.04079229e-04, 1.20646581e-04,1.79849040e-04, 1.45410766e-04, 2.73799809e-04, 2.90914448e-04, 3.60940499e-04, 7.49475450e-04, 5.57057263e-04, 5.30364215e-04, 5.62502859e-04, 4.64987591e-04, 3.03801735e-04, 2.98762032e-04, 4.34044514e-04, 3.76699566e-04, 3.72963769e-04, 2.91826864e-04, 2.21044716e-04, 1.60434747e-04, 1.39942688e-04, 1.19064830e-04, 1.37895726e-04, 1.01095780e-04, 8.79150584e-05, 5.95777259e-05,6.76516393e-05, 5.86880643e-05])
sx_10 = np.asarray([5.98555638e-06, 1.01806713e-05, 1.62933818e-05, 8.76623131e-04, 1.01829540e-03, 3.77295888e-05, 1.60173912e-03, 2.24900999e-03, 2.41519129e-03, 8.04362372e-03, 1.09205207e-03, 1.02869701e-03, 1.06243213e-02, 1.25451801e-02, 1.14544325e-02, 8.57927854e-03, 6.21549463e-03, 4.92444382e-03, 4.10955333e-03, 3.47359754e-03, 2.46941701e-03, 1.81800149e-03, 1.67301026e-03, 1.41568865e-03, 1.07362199e-03, 1.11416250e-03, 8.96050840e-04, 6.90635446e-04, 8.00602525e-04, 5.66108743e-04])
cT_10, scT_10 = c_as_derivative(10, 10, e_10, 0.1, se_10)


#  L = 15, T in [1,4,0.1], Neq = 2*10**5, Nmc = 2.25*10**6
m_15 = np.asarray([0.99935295, 0.99849704, 0.99698875, 0.99456765, 0.99154929, 0.98655868, 0.97931318, 0.97008921, 0.95648524, 0.93675655, 0.91167994, 0.86910909, 0.80140919, 0.70888067, 0.55559022, 0.3879652, 0.32948572, 0.27176438, 0.23357531, 0.20610161, 0.18053795, 0.1641307, 0.1535362, 0.14920508, 0.14210535, 0.13594596, 0.12812541, 0.12306814, 0.11396149, 0.11013165])
e_15 = np.asarray([-1.99744914, -1.99418369, -1.98848293, -1.97953805, -1.96845115, -1.95136309, -1.92698686, -1.89754091, -1.8590381, -1.80608695, -1.74454466, -1.65968914, -1.55743803, -1.43220611, -1.27473742, -1.12448933, -1.04006933, -0.97062027, -0.90945128, -0.86425046, -0.81896966, -0.77430568, -0.74132942, -0.71668122, -0.68972036, -0.66172494, -0.63470897, -0.61477497, -0.59267051, -0.57236143])
c_15 = np.asarray([0.02089816, 0.04021495, 0.06768546, 0.10558739, 0.1440509, 0.20033016, 0.26807742, 0.35001569, 0.44867225, 0.55451791, 0.73610341, 0.95803041, 1.26787962, 1.4461076, 1.39485543, 1.00541569, 0.84531807, 0.63811709, 0.54334601, 0.4794953, 0.40064521, 0.34539755, 0.31508713, 0.29289264, 0.27679089, 0.25713832, 0.22186883, 0.21303945, 0.1874209, 0.18259314])
x_15 = np.asarray([1.37054188e-03, 3.09477011e-03, 6.00274843e-03, 1.07048702e-02, 1.61999007e-02, 2.80893676e-02, 4.32910645e-02, 6.62876282e-02, 1.14393103e-01, 2.05609374e-01, 3.58976586e-01, 7.61192812e-01, 2.22326446e+00, 3.54807924e+00, 5.34420399e+00, 4.52095986e+00, 3.76333591e+00, 2.82006827e+00, 2.12628747e+00, 1.76723272e+00, 1.30972499e+00, 1.08174791e+00, 8.86819014e-01, 8.15081540e-01, 7.37365490e-01, 6.65370045e-01, 5.60310991e-01, 5.21557689e-01, 4.29539557e-01, 4.01431570e-01])
sm_15 = np.asarray([7.74123835e-05, 9.00244325e-05, 1.11517144e-04, 1.48649590e-04, 1.59091101e-04, 2.83242979e-04, 3.15408087e-04, 3.96874827e-04, 6.47811639e-04, 1.26746594e-03, 1.87957387e-03, 3.02782355e-03, 4.89446253e-03, 5.76075212e-03, 6.14339613e-03, 4.51135302e-03, 3.58456056e-03, 3.34413761e-03, 3.11403569e-03, 3.07539019e-03, 2.47723541e-03, 2.25000186e-03, 1.67029457e-03, 1.70283640e-03, 1.75082648e-03, 1.51257896e-03, 1.31029580e-03, 1.50308658e-03, 1.16136407e-03, 1.23619201e-03])
se_15 = np.asarray([0.00028978, 0.00030957, 0.0003305, 0.00040518, 0.00044011, 0.00057011, 0.00072134, 0.00078221, 0.00098032, 0.0013198, 0.00164763, 0.0021015, 0.00238003, 0.00281539, 0.00280908, 0.00277327, 0.00249716, 0.00188953, 0.0017986, 0.00151911, 0.00132461, 0.00102945, 0.00108255, 0.00132165, 0.00104559, 0.00101953, 0.00090581, 0.00088417, 0.00083234, 0.00100702])
sc_15 = np.asarray([1.73705504e-05, 2.31073682e-05, 3.40044954e-05, 4.31809365e-05, 4.40671597e-05, 6.40430725e-05, 8.90674772e-05, 7.91187138e-05, 1.03039101e-04, 1.64736746e-04, 1.96648576e-04, 2.35208402e-04, 3.19304048e-04, 2.58116783e-04, 1.94799207e-04, 2.59955841e-04, 2.39553474e-04, 1.55543407e-04, 1.17148355e-04, 1.11221021e-04, 6.97770755e-05, 5.07873841e-05, 5.71115173e-05, 4.23624656e-05, 3.27203938e-05, 3.66203255e-05, 3.08332753e-05, 2.57133201e-05, 2.27263148e-05, 2.43082681e-05])
sx_15 = np.asarray([3.08348370e-04, 2.31327520e-06, 3.66827253e-04, 4.48421226e-04, 7.73893584e-06, 7.27051839e-04, 2.40783606e-05, 8.77506566e-04, 1.31954390e-03, 2.08184130e-04, 4.13305451e-04, 6.99699484e-04, 7.38650200e-03, 6.61876173e-03, 7.59274454e-03, 5.48278714e-03, 4.13092897e-03, 2.81176950e-03, 2.20935732e-03, 1.80221272e-03, 1.30149261e-03, 1.06212960e-03, 7.59051505e-04, 7.37269794e-04, 6.55717183e-04, 5.09524672e-04, 4.42956404e-04, 3.93155258e-04, 2.93397740e-04, 3.02664293e-04])
cT_15, scT_15 = c_as_derivative(15 , 15, e_15, 0.1, se_15)


#  L = 20, T in [1,4,0.1], Neq = 3*10**5, Nmc = 4*10**6
m_20 = np.asarray([0.99934226, 0.99854258, 0.99713515, 0.99471611, 0.99141144, 0.98711116, 0.97935626, 0.96914834, 0.9559996, 0.94016194, 0.91642943, 0.87195322, 0.78472411, 0.64507797, 0.36519992, 0.3259996, 0.25218513, 0.19093163, 0.17986006, 0.15485206, 0.13316673, 0.12508996, 0.12097761, 0.11080768, 0.10489604, 0.1027529, 0.09441623, 0.09710916, 0.08660736, 0.08519592])
e_20 = np.asarray([-1.99738105, -1.99434226, -1.98890444, -1.98006797, -1.96807677, -1.95314674, -1.9269972, -1.89742903, -1.85790084, -1.81361056, -1.75159536, -1.66193123, -1.55339464, -1.39520592, -1.21872451, -1.12132747, -1.03454618, -0.96627749, -0.91310276, -0.86227109, -0.8217513, -0.77872451, -0.74359056, -0.71365454, -0.69253898, -0.66311475, -0.63672131, -0.61910436, -0.5917593, -0.57726909])
c_20 = np.asarray([0.01969546, 0.04153618, 0.06181951, 0.09824127, 0.15014804, 0.18344557, 0.26147972, 0.37207919, 0.4268554, 0.56094113, 0.63780626, 0.8678387, 1.41568098, 1.70785732, 1.26944864, 0.98538486, 0.75423109, 0.64920958, 0.50407434, 0.43781964, 0.4362438, 0.37188756, 0.32631255, 0.30182524, 0.27476037, 0.25249572, 0.23497903, 0.21892185, 0.19960392, 0.18722765])
x_20 = np.asarray([1.25438189e-03, 3.12060120e-03, 5.15771300e-03, 1.00511722e-02, 1.69380971e-02, 2.45611727e-02, 4.07800454e-02, 8.78882297e-02, 1.15496113e-01, 1.78363132e-01, 2.45958800e-01, 6.13452412e-01, 3.90299950e+00, 6.57266553e+00, 9.72100160e+00, 6.08632393e+00, 4.17980397e+00, 2.88288118e+00, 2.34651574e+00, 1.88860981e+00, 1.45020496e+00, 1.12726289e+00, 9.66927466e-01, 8.36754680e-01, 7.44595008e-01, 6.82413722e-01, 5.31995988e-01, 5.50802347e-01, 4.62191478e-01, 4.03541312e-01])
sm_20 = np.asarray([7.41897861e-05, 1.06659674e-04, 1.02445852e-04, 1.52598697e-04, 2.04267874e-04, 2.10332832e-04, 2.68092795e-04, 6.32553179e-04, 6.43579642e-04, 7.02092376e-04, 7.03447615e-04, 1.38253563e-03, 2.01853186e-03, 3.05223568e-03, 3.17194077e-03, 3.21955678e-03, 3.23153175e-03, 3.18618102e-03, 2.72283655e-03, 2.96738304e-03, 2.81853556e-03, 2.12405410e-03, 2.07586591e-03, 1.95050028e-03, 2.02466501e-03, 1.92312604e-03, 1.53232678e-03, 1.62362037e-03, 1.53417115e-03, 1.29708260e-03])
se_20 = np.asarray([0.00029019, 0.00039622, 0.00036434, 0.00042352, 0.0006247, 0.00055307, 0.00073343, 0.00116834, 0.00122353, 0.00131255, 0.0012487, 0.00182411, 0.00193646, 0.00274224, 0.00203978, 0.002068, 0.00192838, 0.00195223, 0.00185138, 0.00163243, 0.00178452, 0.0014398, 0.00141414, 0.00123702, 0.0014529, 0.00159869, 0.00146043, 0.0011871, 0.0012323, 0.0012787 ])
sc_20 = np.asarray([7.77662357e-06, 1.72554572e-05, 1.92502527e-05, 2.89408599e-05, 4.59049037e-05, 3.06608089e-05, 5.14224304e-05, 7.11178511e-05, 6.13747015e-05, 9.42201237e-05, 8.15290816e-05, 1.34914863e-04, 1.92514553e-04, 1.96316348e-04, 1.90568191e-04, 1.50135471e-04, 1.46349189e-04, 9.06980503e-05, 7.16250142e-05, 6.22531533e-05, 6.20218389e-05, 4.15137283e-05, 4.26891550e-05, 3.78481542e-05, 3.16693531e-05, 3.37970679e-05, 3.33212509e-05, 2.61549007e-05, 2.27077932e-05, 2.10826014e-05])
sx_20 = np.asarray([5.70182977e-07, 3.86211663e-04, 3.39079522e-04, 4.32310158e-06, 5.72508327e-04, 7.01950713e-06, 6.47621613e-04, 3.59235500e-05, 1.33351186e-03, 1.33116192e-03, 5.53528096e-05, 1.67166975e-04, 2.39757297e-03, 1.09090754e-03, 2.65901486e-03, 2.13659699e-03, 1.75915990e-03, 1.25158477e-03, 1.12069502e-03, 1.12297834e-03, 9.06236947e-04, 6.74149433e-04, 5.20191298e-04, 4.72530702e-04, 3.55124194e-04, 4.13167065e-04, 3.08018779e-04, 3.58184669e-04, 2.62070784e-04, 2.46070374e-04])
cT_20, scT_20 = c_as_derivative(20, 20, e_20, 0.1, se_20)


#  L = 30, T in [1,4,0.1], Neq = 5*10**5, Nmc = 9*10**6
m_30 = np.asarray([0.99929856, 0.9986251, 0.99705835, 0.99447842, 0.99128697, 0.98596523, 0.97917466, 0.97052958, 0.95752198, 0.93930855, 0.91175659, 0.87466627, 0.73101519, 0.64745803, 0.33747602, 0.2217446, 0.14745604, 0.12372502, 0.11581135, 0.09302358, 0.08819944, 0.08328537, 0.07230416, 0.07222022, 0.07529576, 0.06853717, 0.06256595, 0.05892486, 0.05743605, 0.05502798])
e_30 = np.asarray([-1.99723421, -1.99460831, -1.98873301, -1.97928058, -1.9677458, -1.94967626, -1.92650679, -1.89926859, -1.86016787, -1.81372502, -1.74288969, -1.67031575, -1.51219424, -1.40039169, -1.21366906, -1.11083533, -1.02734213, -0.9604996, -0.89926459, -0.85904077, -0.80647882, -0.77647482, -0.74567146, -0.71445244, -0.68568745, -0.65609512, -0.63714628, -0.61513189, -0.59367706, -0.57601519])
c_30 = np.asarray([0.02090115, 0.03623532, 0.06506608, 0.10071813, 0.14494888, 0.19313331, 0.27211082, 0.29916487, 0.4236039, 0.55073664, 0.69019153, 0.93083769, 1.45522245, 1.84199669, 1.47666771, 0.99005268, 0.62701866, 0.64821876, 0.5276015, 0.48406117, 0.38441072, 0.3574388, 0.31307336, 0.30679515, 0.25018327, 0.26294146, 0.22185899, 0.20428583, 0.19148487, 0.17818446])
x_30 = np.asarray([1.36773675e-03, 2.66089287e-03, 5.69362256e-03, 1.04954194e-02, 1.65097521e-02, 2.78396156e-02, 4.41487076e-02, 5.66860583e-02, 1.01552683e-01, 2.11629311e-01, 2.88547520e-01, 8.05250885e-01, 5.95785177e+00, 8.49714833e+00, 1.82254205e+01, 9.39213051e+00, 2.94713873e+00, 3.01281264e+00, 2.13405457e+00, 1.86086082e+00, 1.44693840e+00, 1.30999392e+00, 8.51494415e-01, 8.75861734e-01, 8.47932010e-01, 6.48984976e-01, 4.90637929e-01, 4.49361277e-01, 4.22652093e-01, 3.88627891e-01])
sm_30 = np.asarray([5.07141062e-05, 5.78841428e-05, 7.48136627e-05, 1.05561197e-04, 1.21372385e-04, 1.80252409e-04, 2.05578290e-04, 2.53922387e-04, 3.98221400e-04, 4.41054796e-04, 6.93384751e-04, 7.59514451e-04, 1.30658748e-03, 1.57553547e-03, 1.74133446e-03, 1.70154809e-03, 1.47327005e-03, 2.05154795e-03, 1.54648145e-03, 1.68944323e-03, 1.65898644e-03, 1.69941653e-03, 1.45318507e-03, 1.48895530e-03, 1.57688186e-03, 1.29457846e-03, 1.08727991e-03, 1.18843639e-03, 1.28899300e-03, 9.71012574e-04])
se_30 = np.asarray([0.0001945, 0.00021303, 0.00025172, 0.00033369, 0.00038853, 0.00053264, 0.000606, 0.0007173, 0.00099127, 0.00100872, 0.00147552, 0.00147668, 0.00147985, 0.00185151, 0.00176873, 0.00158134, 0.00129338, 0.00144777, 0.00135236, 0.00146991, 0.00129365, 0.0012127, 0.00125029, 0.00121497, 0.00122675, 0.00145999, 0.00110678, 0.00106901, 0.00109117, 0.00129294])
sc_30 = np.asarray([3.22778609e-06, 5.75032390e-06, 6.12520211e-06, 1.01606426e-05, 1.14987804e-05, 2.03111059e-05, 1.80540383e-05, 2.06048839e-05, 3.62615821e-05, 3.81575071e-05, 4.98049662e-05, 7.72674183e-05, 1.00002929e-04, 1.23653394e-04, 1.06869256e-04, 7.70575036e-05, 4.22565135e-05, 4.76135962e-05, 3.97490936e-05, 3.52370724e-05, 2.70747952e-05, 2.32850159e-05, 2.07698321e-05, 1.93272760e-05, 1.79839280e-05, 2.27271691e-05, 1.56391435e-05, 1.19633881e-05, 1.21059814e-05, 1.44794882e-05])
sx_30 = np.asarray([2.21731884e-07, 4.60594378e-07, 7.05339062e-07, 1.34910463e-06, 1.49482785e-06, 3.99408375e-06, 3.60275501e-06, 5.76832781e-04, 8.38321121e-04, 2.72748501e-05, 2.10914738e-05, 7.97017957e-05, 2.18626112e-04, 3.74961433e-04, 1.16797878e-03, 9.33460162e-04, 5.59609346e-04, 5.66447909e-04, 4.37368162e-04, 3.95384364e-04, 2.95673195e-04, 2.98006191e-04, 2.03064355e-04, 2.07667520e-04, 2.43410483e-04, 1.58412691e-04, 1.27586924e-04, 1.18504484e-04, 1.36351797e-04, 1.07650780e-04])
cT_30, scT_30 = c_as_derivative(30, 30, e_30, 0.1, se_30)





# --------------------------
# Plotting physical quantities with OBC: <|M|>/N, <E>/N, X/N, Cv/N

#  L = 4, T in [1,4,0.1], Neq = 10**4, Nmc = 1.6*10**5
m_4_O = np.asarray([0.99972503, 0.99913759, 0.99770023, 0.99481302, 0.98780122, 0.97315268, 0.96280372, 0.94323068, 0.92274523, 0.87726227, 0.83731627, 0.79790771, 0.74711279, 0.69791771, 0.66435856, 0.62539996, 0.58350415, 0.54808269, 0.52359764, 0.50868663, 0.48377662, 0.45446705, 0.44158084, 0.42319518, 0.40910909, 0.39359814, 0.38977352, 0.37453755, 0.3599515, 0.35567693])
e_4_O = np.asarray([-1.49945005, -1.49815018, -1.49537546, -1.4899885, -1.47756474, -1.45537946, -1.43538146, -1.40382212, -1.37018798, -1.30535696, -1.24372563, -1.19148085, -1.11785071, -1.04632037, -0.99378812, -0.93475652, -0.88387411, -0.82612989, -0.78374663, -0.75316218, -0.71217878, -0.67220778, -0.63853615, -0.60858914, -0.58864114, -0.5559819, -0.54255824, -0.51762324, -0.4929507, -0.4810394])
c_4_O = np.asarray([0.0093797, 0.02373442, 0.04286874, 0.0743225, 0.14001161, 0.24561637, 0.29322227, 0.38156409, 0.43794702, 0.5535874, 0.61599176, 0.6527678, 0.64970393, 0.6080464, 0.60249032, 0.55659079, 0.50920982, 0.46429935, 0.4313986, 0.4022714, 0.35438226, 0.31479311, 0.29386541, 0.2733675, 0.24304007, 0.22862452, 0.2078973, 0.19629192, 0.17892195, 0.16888643])
x_4_O = np.asarray([0.00119746, 0.00302153, 0.00766405, 0.01786631, 0.04796054, 0.13570282, 0.1529036, 0.22387823, 0.28245071, 0.45598519, 0.53658082, 0.64421617, 0.69527848, 0.70432935, 0.71400069, 0.68570515, 0.68402529, 0.63681367, 0.60304384, 0.57155433, 0.51792357, 0.48391303, 0.44222977, 0.41832669, 0.38923979, 0.36186888, 0.34027486, 0.32105276, 0.29446338, 0.28225863])
sm_4_O = np.asarray([0.0005729, 0.00087394, 0.00124689, 0.00159199, 0.00288626, 0.00515373, 0.00475601, 0.005036, 0.00525357, 0.00623877, 0.00542824, 0.00485721, 0.00451426, 0.00268676, 0.00328745, 0.00220921, 0.00193637, 0.00193602, 0.00171768, 0.00186503, 0.00175611, 0.00168968, 0.0018544, 0.00165831, 0.00176575, 0.00195166, 0.00173004, 0.00197414, 0.00197273, 0.00204564])
se_4_O = np.asarray([0.00113221, 0.00191474, 0.00244661, 0.00264843, 0.00344619, 0.00412883, 0.00391878, 0.00418481, 0.00437704, 0.00462143, 0.00433514, 0.00348009, 0.00336685, 0.00226176, 0.00309959, 0.00323199, 0.0028635, 0.00299586, 0.00286082, 0.00304061, 0.0028758, 0.00298188, 0.0030625, 0.00275806, 0.00285788, 0.00306475, 0.003002, 0.00305409, 0.00341037, 0.00291413])
sc_4_O = np.asarray([0.00125999, 0.00177614, 0.00166024, 0.00165843, 0.00206985, 0.0029665, 0.00266192, 0.00280143, 0.00268613, 0.0027512, 0.00235841, 0.00181948, 0.00128231, 0.00080897, 0.0009036, 0.00068888, 0.00054107, 0.00047586, 0.00045298, 0.00047841, 0.00038454, 0.0003678, 0.00039752, 0.00034902, 0.00034703, 0.0003761, 0.00034446, 0.00033813, 0.00033919, 0.0002904])
sx_4_O = np.asarray([0.00017683, 0.00021364, 0.00680127, 0.0007306, 0.00235336, 0.03251918, 0.02678518, 0.0329771, 0.02534646, 0.03629444, 0.03250503, 0.02854546, 0.0208969, 0.01759703, 0.01487482, 0.01183956, 0.0098046, 0.00617673, 0.00527969, 0.0058655, 0.00399955, 0.00341301, 0.00351565, 0.00290609, 0.00311563, 0.00261964, 0.00227329, 0.00231254, 0.00189084, 0.00196345])
cT_4_O, scT_4_O = c_as_derivative(4, 4, e_4_O, 0.1, se_4_O)


#  L = 10, T in [1,4,0.1], Neq = 10**5, Nmc = 10**6
m_10_O = np.asarray([0.999984, 0.99982402, 0.99956804, 0.99891211, 0.99747025, 0.99424258, 0.99018898, 0.98435556, 0.9719788, 0.9580362, 0.94407559, 0.91529047, 0.87026297, 0.81033097, 0.71652635, 0.63725427, 0.53841416, 0.47442456, 0.44348765, 0.35008699, 0.31222478, 0.28588541, 0.25963004, 0.24025197, 0.23286871, 0.21388461, 0.19976602, 0.19007299, 0.18717928, 0.17867213])
e_10_O = np.asarray([-1.799964, -1.79962804, -1.7989881, -1.79750425, -1.79427057, -1.78729727, -1.77770823, -1.76429357, -1.74138786, -1.71328267, -1.68468753, -1.63952205, -1.57711629, -1.49982202, -1.40048595, -1.31777022, -1.20986101, -1.13464854, -1.07220478, -0.98367963, -0.92177382, -0.86845115, -0.81576642, -0.78358364, -0.74835716, -0.70909309, -0.68005199, -0.65437856, -0.63109689, -0.60431957])
c_10_O = np.asarray([0.00067141, 0.00469443, 0.01085931, 0.02119954, 0.04212053, 0.07825463, 0.11318102, 0.16743349, 0.24084181, 0.32292041, 0.40601917, 0.4871158, 0.64201758, 0.84315298, 0.93685157, 0.92279841, 0.90932745, 0.82495385, 0.77417038, 0.66645105, 0.56737004, 0.51346124, 0.42549867, 0.39309381, 0.36044756, 0.32045048, 0.28945531, 0.26646433, 0.24433045, 0.22249314])
x_10_O = np.asarray([0.00006394, 0.00063477, 0.00135606, 0.00331172, 0.00903462, 0.01990288, 0.0294129, 0.04964063, 0.11637713, 0.17775816, 0.24290557, 0.47285385, 0.96755624, 1.63167575, 2.59233722, 2.77684333, 3.11560486, 2.81420728, 2.4716448, 2.12516758, 1.69680711, 1.46000625, 1.1598982, 1.02588657, 0.92767343, 0.78727455, 0.68326281, 0.61283636, 0.54026272, 0.49157192])
sm_10_O = np.asarray([0.00005466, 0.00014936, 0.00018692, 0.00022622, 0.00041984, 0.00054399, 0.00052654, 0.00075915, 0.00151724, 0.00179078, 0.00216913, 0.00359345, 0.00478253, 0.00628829, 0.00706367, 0.00534525, 0.00508462, 0.00396264, 0.00355313, 0.00328487, 0.00300718, 0.00303913, 0.00233451, 0.00277882, 0.00269474, 0.00217031, 0.00194471, 0.00194745, 0.00164617, 0.00167482])
se_10_O = np.asarray([0.0001254, 0.00031325, 0.00045646, 0.00049506, 0.00055849, 0.00062765, 0.00059209, 0.00086146, 0.00096568, 0.00115556, 0.00173655, 0.00180353, 0.00216459, 0.00271546, 0.00245889, 0.00249683, 0.00250518, 0.00265994, 0.00240145, 0.00232982, 0.00233891, 0.00201255, 0.00174261, 0.00168071, 0.00185594, 0.00174231, 0.00127529, 0.00147037, 0.00137692, 0.00146131])
sc_10_O = np.asarray([0.00002491, 0.00004303, 0.00006246, 0.000061, 0.00008809, 0.00010665, 0.00009606, 0.00016575, 0.0001928, 0.00022138, 0.00034096, 0.00034296, 0.00047562, 0.00049584, 0.00038173, 0.00030219, 0.00025552, 0.00024466, 0.0002643, 0.00026612, 0.00019322, 0.00016222, 0.00016106, 0.00015366, 0.0001328, 0.00012145, 0.00008122, 0.00007952, 0.00006323, 0.00008223])
sx_10_O = np.asarray([0.00043508, 0.00098958, 0.0010609, 1.23562e-05, 0.00180308, 7.14864e-05, 7.25049e-05, 0.00012024, 0.00421136, 0.00447429, 0.00495434, 0.00123703, 0.00999773, 0.01352564, 0.0105224, 0.01228366, 0.01037863, 0.00767097, 0.00779161, 0.00504195, 0.00413099, 0.00314257, 0.00242844, 0.00206655, 0.00188585, 0.00157418, 0.00115473, 0.00105394, 0.00077449, 0.0007168])
cT_10_O, scT_10_O = c_as_derivative(10, 10, e_10_O, 0.1, se_10_O)


#  L = 15, T in [1,4,0.1], Neq = 2*10**5, Nmc = 2.25*10**6
m_15_O = np.asarray([0.99998134, 0.99990401, 0.99972003, 0.99934673, 0.99835039, 0.99665811, 0.99406282, 0.98924996, 0.98309591, 0.97261785, 0.95888056, 0.93909142, 0.90884023, 0.86565877, 0.79772245, 0.70272573, 0.59450011, 0.43610083, 0.356675, 0.28585186, 0.25149263, 0.2165219, 0.19125865, 0.17839061, 0.16527281, 0.15908765, 0.14083169, 0.13919364, 0.1301341, 0.12621538])
e_15_O = np.asarray([-1.86662578, -1.86643913, -1.86600273, -1.86503039, -1.86259952, -1.85826751, -1.85168683, -1.84001955, -1.82501217, -1.80158962, -1.77234988, -1.73643169, -1.68686331, -1.62049128, -1.53827551, -1.44665, -1.34015576, -1.21809419, -1.13771823, -1.05010032, -0.97982557, -0.92145008, -0.86313946, -0.8202362, -0.78008732, -0.74598762, -0.7105165, -0.682258, -0.65500472, -0.63025697])
c_15_O = np.asarray([7.80639598e-04, 3.26607860e-03, 7.45577934e-03, 1.51987740e-02, 3.08736902e-02, 5.57324586e-02, 8.33460951e-02, 1.31497902e-01, 1.79326989e-01, 2.58942277e-01, 3.26367227e-01, 4.55034290e-01, 5.66581815e-01, 6.89600731e-01, 8.40915425e-01, 1.06675311e+00, 1.05234989e+00, 9.55249683e-01, 8.64312998e-01, 7.54420620e-01, 6.50319242e-01, 5.50748370e-01, 4.68869805e-01, 4.39202112e-01, 3.79530729e-01, 3.57408928e-01, 3.13631580e-01, 2.87035689e-01, 2.53965446e-01, 2.41040511e-01])
x_15_O = np.asarray([8.16128322e-05, 3.46139361e-04, 9.47406192e-04, 2.02864803e-03, 5.12652111e-03, 1.07942652e-02, 1.76470534e-02, 3.39248449e-02, 5.24807427e-02, 1.03575933e-01, 1.55705475e-01, 3.30702011e-01, 6.33181401e-01, 1.03919230e+00, 2.17390348e+00, 4.58527673e+00, 5.19033409e+00, 5.55566311e+00, 4.72834311e+00, 3.46666928e+00, 2.63712092e+00, 1.94197836e+00, 1.54515132e+00, 1.26781145e+00, 1.15189777e+00, 1.02813712e+00, 7.87302207e-01, 7.41164362e-01, 6.32918655e-01, 5.90676244e-01])
sm_15_O = np.asarray([3.98138439e-05, 7.64919734e-05, 1.01924537e-04, 1.03663057e-04, 1.49967703e-04, 2.35487419e-04, 2.58866490e-04, 3.54994580e-04, 4.45353664e-04, 8.12999379e-04, 9.48749362e-04, 1.61747344e-03, 2.33110770e-03, 3.04710154e-03, 4.49974118e-03, 4.25627831e-03, 4.79466368e-03, 4.81225835e-03, 4.21440028e-03, 4.13012844e-03, 3.52903180e-03, 3.01482871e-03, 2.67127157e-03, 2.06722409e-03, 2.47474340e-03, 2.20900971e-03, 1.64372741e-03, 1.71855424e-03, 1.42387182e-03, 1.54629056e-03])
se_15_O = np.asarray([8.71626679e-05, 1.82611452e-04, 2.31911637e-04, 2.17389714e-04, 2.56170677e-04, 2.81875615e-04, 3.25781259e-04, 3.67897968e-04, 4.74152510e-04, 6.08388598e-04, 7.69234443e-04, 9.97087576e-04, 1.30537431e-03, 1.29066188e-03, 1.69215623e-03, 1.90078017e-03, 1.92381290e-03, 1.89880286e-03, 1.73280936e-03, 1.89761072e-03, 1.68716463e-03, 1.33544318e-03, 1.10703127e-03, 1.33844649e-03, 1.18701758e-03, 1.08382645e-03, 9.66298709e-04, 1.02682110e-03, 1.02980586e-03, 9.98996851e-04])
sc_15_O = np.asarray([7.90247047e-06, 1.27413623e-05, 1.41332653e-05, 1.43968708e-05, 2.19888904e-05, 2.94096291e-05, 3.27802774e-05, 4.19581987e-05, 4.94305264e-05, 6.90839854e-05, 8.82179259e-05, 1.38406702e-04, 1.83523569e-04, 1.64221859e-04, 1.70548011e-04, 2.47673920e-04, 1.93844455e-04, 1.51135434e-04, 1.47605844e-04, 1.32007155e-04, 1.20327384e-04, 7.98041517e-05, 6.05543760e-05, 7.60945097e-05, 6.34329084e-05, 4.52555588e-05, 3.85156034e-05, 4.27792789e-05, 3.74337373e-05, 3.27684617e-05])
sx_15_O = np.asarray([8.80986916e-07, 5.08560380e-04, 2.20916536e-06, 3.71612729e-06, 8.33355887e-06, 9.21863345e-04, 9.18992752e-04, 2.99609700e-05, 1.30986548e-03, 2.15394640e-03, 2.31542022e-03, 3.52945033e-03, 4.54424804e-03, 8.09893294e-04, 5.86502575e-03, 7.57145535e-03, 7.50993358e-03, 6.11793164e-03, 4.66632605e-03, 3.81766235e-03, 2.62802436e-03, 2.18624782e-03, 1.51790822e-03, 1.14262913e-03, 1.13079137e-03, 8.88049516e-04, 6.27845129e-04, 6.63483513e-04, 5.16142318e-04, 4.47222626e-04])
cT_15_O, scT_15_O = c_as_derivative(15 , 15, e_15_O, 0.1, se_15_O)


#  L = 20, T in [1,4,0.1], Neq = 3*10**5, Nmc = 4*10**6
m_20_O = np.asarray([0.9999936, 0.9999536, 0.99981881, 0.99948724, 0.99887609, 0.99736501, 0.99542437, 0.99167787, 0.98678066, 0.97921166, 0.9674626, 0.95189745, 0.92864731, 0.89397888, 0.84550316, 0.74206224, 0.61093033, 0.45355252, 0.31658987, 0.26092873, 0.22188185, 0.19588193, 0.15889649, 0.15036437, 0.13282097, 0.12551956, 0.11474522, 0.10666387, 0.09958363, 0.09653348])
e_20_O = np.asarray([-1.89995161, -1.89989161, -1.89955164, -1.89862891, -1.89688825, -1.89304416, -1.8875206, -1.87774178, -1.86467643, -1.84552236, -1.81862931, -1.78396128, -1.73942965, -1.68184505, -1.61133269, -1.51561475, -1.40464923, -1.27588873, -1.17056196, -1.08162027, -1.00604672, -0.95262339, -0.89206783, -0.84680826, -0.80210783, -0.76220822, -0.72952724, -0.69862171, -0.67095392, -0.64641469])
c_20_O = np.asarray([0.00083127, 0.00153127, 0.00531954, 0.0134764, 0.02521094, 0.04775073, 0.07355778, 0.1148986, 0.1572876, 0.22028995, 0.30289756, 0.37788898, 0.49345958, 0.64838338, 0.79265634, 1.05714143, 1.12379825, 1.11173074, 0.95112891, 0.85007286, 0.71327019, 0.60992749, 0.52391791, 0.46473425, 0.39231471, 0.36321083, 0.32608224, 0.29344028, 0.27364834, 0.24976799])
x_20_O = np.asarray([1.01885031e-04, 1.63885031e-04, 6.22332606e-04, 1.56840313e-03, 3.19828861e-03, 9.72253278e-03, 1.27094920e-02, 2.48375267e-02, 3.78262062e-02, 6.27276890e-02, 1.13360825e-01, 1.85715993e-01, 3.62870283e-01, 8.21089698e-01, 1.42434054e+00, 6.02470819e+00, 7.76613193e+00, 8.45478955e+00, 6.95799399e+00, 5.27009729e+00, 3.46757289e+00, 2.74423464e+00, 1.97154186e+00, 1.78013091e+00, 1.31033096e+00, 1.13037411e+00, 9.24444894e-01, 7.97062151e-01, 6.64529216e-01, 6.15133879e-01])
sm_20_O = np.asarray([1.54764130e-03, 3.71689117e-05, 4.91636707e-05, 5.32109927e-05, 6.06288818e-05, 2.03509575e-04, 1.25610599e-04, 1.99322070e-04, 2.39708364e-04, 2.99225548e-04, 4.38832050e-04, 7.01356159e-04, 1.08568077e-03, 1.68182627e-03, 2.42720205e-03, 4.19183197e-03, 4.04848393e-03, 4.36636902e-03, 4.32955463e-03, 3.72974436e-03, 2.90499076e-03, 2.63370423e-03, 2.21477557e-03, 2.33994770e-03, 1.78025511e-03, 1.50817440e-03, 1.32483425e-03, 1.32112361e-03, 9.61355460e-04, 1.09882057e-03])
se_20_O = np.asarray([1.13532124e-04, 8.87625876e-05, 1.11707949e-04, 1.27794545e-04, 1.30967530e-04, 1.69956865e-04, 1.65150466e-04, 2.54809793e-04, 2.57308917e-04, 3.51656366e-04, 4.22778824e-04, 4.92334743e-04, 6.72425300e-04, 9.36730415e-04, 9.27284633e-04, 1.36171954e-03, 1.26201820e-03, 1.56071773e-03, 1.40205037e-03, 1.30098745e-03, 1.17890004e-03, 1.12512248e-03, 1.02068587e-03, 9.22580800e-04, 7.74176739e-04, 7.74963141e-04, 7.24172293e-04, 7.39816560e-04, 6.94254022e-04, 7.19986763e-04])
sc_20_O = np.asarray([8.82343942e-06, 3.60479695e-06, 4.79135434e-06, 5.66325990e-06, 8.83712344e-06, 1.32051278e-05, 1.36627183e-05, 2.28693694e-05, 1.99821952e-05, 3.09401894e-05, 3.19657595e-05, 4.15809678e-05, 5.70245337e-05, 7.98809896e-05, 7.73419216e-05, 1.15499645e-04, 1.18873298e-04, 1.09875033e-04, 1.00893569e-04, 9.10366976e-05, 6.53844413e-05, 5.17857048e-05, 4.27693723e-05, 3.72959090e-05, 2.71560038e-05, 2.98795871e-05, 2.31377465e-05, 1.74648741e-05, 1.74158644e-05, 1.95540578e-05])
sx_20_O = np.asarray([1.92363163e-03, 3.80687906e-07, 8.45993861e-07, 1.00787626e-06, 1.77096083e-06, 1.22733739e-05, 4.50320236e-04, 6.48756234e-04, 1.41540718e-05, 8.19642626e-04, 1.10197583e-03, 1.60406684e-03, 2.25236299e-03, 3.05767888e-03, 3.79958477e-03, 1.89770146e-03, 6.46332753e-03, 5.46975827e-03, 3.72007172e-03, 2.98588979e-03, 2.06443362e-03, 1.59392867e-03, 1.06560565e-03, 1.04167894e-03, 7.16983716e-04, 4.78773515e-04, 4.48403692e-04, 3.62639250e-04, 2.54290867e-04, 2.69042504e-04])
cT_20_O, scT_20_O = c_as_derivative(20, 20, e_20_O, 0.1, se_20_O)


#  L = 30, T in [1,4,0.1], Neq = 5*10**5, Nmc = 9*10**6
m_30_O = np.asarray([ 0.9999714, 0.9999674, 0.99989241, 0.99966723, 0.99900723, 0.99826974, 0.99730483, 0.9937525, 0.98759729, 0.98302036, 0.97443085, 0.96286297, 0.94290997, 0.91514219, 0.88511239, 0.81545056, 0.73140649, 0.44908907, 0.3100144, 0.2124838, 0.16331733, 0.14202584, 0.11216263, 0.09887649, 0.09099732, 0.0837097, 0.07719662, 0.07382849, 0.06909647, 0.06507739])
e_30_O = np.asarray([-1.93364434, -1.93324734, -1.93303916, -1.93238241, -1.93058241, -1.92816015, -1.91811335, -1.9150028, -1.88440125, -1.88575614, -1.86305816, -1.83410947, -1.7937655, -1.74067975, -1.68171346, -1.59566935, -1.49800036, -1.34576354, -1.22530438, -1.12705024, -1.04401468, -0.97345992, -0.91542397, -0.86673226, -0.81843573, -0.78073174, -0.74507659, -0.71309995, -0.68594972, -0.65716003])
c_30_O = np.asarray([1.11835052e-03, 1.39473323e-03, 3.69135358e-03, 9.88687188e-03, 1.35378375e-02, 3.86597110e-02, 7.33533188e-02, 9.87222362e-02, 1.5318613e-01, 1.94285573e-01, 2.64884695e-01, 3.42595016e-01, 4.45654969e-01, 5.85638000e-01, 7.01187293e-01, 9.23973668e-01, 1.10146939e+00, 1.51894912e+00, 1.13447348e+00, 9.03622081e-01, 7.49727631e-01, 6.57289603e-01, 5.62497060e-01, 4.71754317e-01, 4.12396493e-01, 3.67566513e-01, 3.39830620e-01, 3.03160139e-01, 2.75314775e-01, 2.57952454e-01])
x_30_O = np.asarray([8.79211447e-05, 1.20396356e-04, 3.51944487e-04, 9.94330101e-04, 1.62556389e-03, 4.77217805e-03, 8.75523640e-03, 1.70561829e-02, 3.27952552e-02, 5.26185298e-02, 8.56319718e-02, 1.34518281e-01, 3.56046970e-01, 6.33861848e-01, 7.56174890e-01, 2.56433969e+00, 5.18893663e+00, 2.31066156e+01, 1.30124817e+01, 8.53277472e+00, 5.17905470e+00, 3.96338896e+00, 2.32082678e+00, 1.76022199e+00, 1.42572068e+00, 1.16915463e+00, 1.01318630e+00, 8.31547763e-01, 7.63901438e-01, 6.26737099e-01])
sm_30_O = np.asarray([7.73512420e-04, 1.94735061e-05, 1.89185380e-05, 2.38126262e-05, 1.22368445e-03, 4.57517569e-05, 9.89303424e-04, 7.91067274e-05, 1.89883518e-03, 2.07989661e-04, 2.57395333e-04, 3.51922208e-04, 6.89625911e-04, 8.01858541e-04, 8.15044143e-04, 1.77956387e-03, 2.28850465e-03, 3.68497815e-03, 3.29016837e-03, 3.53426236e-03, 2.81655548e-03, 2.53530005e-03, 1.89313614e-03, 1.61150557e-03, 1.34319299e-03, 1.20089322e-03, 1.15782913e-03, 8.55796303e-04, 8.60489139e-04, 7.06976219e-04])
se_30_O = np.asarray([6.73613361e-05, 5.11328629e-05, 4.63199662e-05, 5.82682260e-05, 8.74658791e-05, 8.72065674e-05, 2.09148263e-04, 1.13415221e-04, 1.81066210e-04, 1.98799470e-04, 2.54570450e-04, 3.51604893e-04, 4.20174776e-04, 5.00505728e-04, 6.15140210e-04, 8.09986889e-04, 8.48382953e-04, 1.15636117e-03, 1.12599052e-03, 1.07883769e-03, 8.29309558e-04, 8.16823439e-04, 7.17244101e-04, 5.77513344e-04, 5.95057420e-04, 6.31757378e-04, 5.43205044e-04, 4.95729232e-04, 4.87280899e-04, 4.68839765e-04])
sc_30_O = np.asarray([2.45178478e-06, 1.06407195e-06, 8.84758601e-07, 1.52022301e-06, 3.63744732e-06, 3.25510782e-06, 3.67475544e-05, 4.55680731e-06, 5.16972870e-05, 9.18084876e-06, 1.10641163e-05, 1.71976592e-05, 2.30843600e-05, 2.92348734e-05, 3.09370755e-05, 4.67372687e-05, 5.24712168e-05, 7.26419421e-05, 6.18662134e-05, 4.66375785e-05, 2.94159136e-05, 3.04138310e-05, 2.14351061e-05, 1.72295047e-05, 1.40309974e-05, 1.46850340e-05, 1.14394872e-05, 9.53085460e-06, 7.52229944e-06, 8.05550048e-06])
sx_30_O = np.asarray([3.41153333e-03, 1.10343930e-07, 1.42377927e-07, 2.17934416e-07, 1.69821321e-03, 1.82050743e-04, 6.72660977e-04, 2.60409187e-04, 3.48347924e-03, 8.11136579e-06, 6.58305223e-04, 1.73839108e-05, 1.46604209e-03, 1.54833480e-03, 1.44276015e-03, 2.65543755e-03, 2.78007904e-03, 3.56260510e-03, 2.76569732e-03, 1.73139153e-03, 1.28625947e-03, 1.06901452e-03, 5.96246916e-04, 4.07939384e-04, 3.36671846e-04, 2.53445587e-04, 2.50113078e-04, 1.70834662e-04, 1.45195944e-04, 1.20718784e-04])
cT_30_O, scT_30_O = c_as_derivative(30, 30, e_30_O, 0.1, se_30_O)



